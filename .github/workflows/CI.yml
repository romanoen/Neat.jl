name: CI

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  test:
    name: Julia ${{ matrix.version }} – ${{ matrix.os }} – ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    permissions:
      actions: write    # nötig für Cache-Cleanup
      contents: read
    strategy:
      fail-fast: false
      matrix:
        version: ["1.11"]
        os: [ubuntu-latest]
        arch: [x64]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Julia
        uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}

      - name: Cache Julia packages
        uses: julia-actions/cache@v2

      - name: Build package
        uses: julia-actions/julia-buildpkg@v1

      - name: Run tests with coverage
        uses: julia-actions/julia-runtest@v1

      - name: Process coverage results
        uses: julia-actions/julia-processcoverage@v1

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          # files: lcov.info               # nur nötig, falls du ein anderes Format nutzt
          # token: ${{ secrets.CODECOV_TOKEN }}  # nur für private Repos/Enterprise
          fail_ci_if_error: false

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    permissions:
      actions: write    # nötig für Cache-Cleanup
      contents: write
      statuses: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Julia
        uses: julia-actions/setup-julia@v2
        with:
          version: "1"

      - name: Cache Julia packages
        uses: julia-actions/cache@v2

      - name: Configure doc environment
        shell: julia --project=docs --color=yes {0}
        run: |
          using Pkg
          Pkg.develop(PackageSpec(path=pwd()))
          Pkg.instantiate()

      - name: Build docs
        uses: julia-actions/julia-buildpkg@v1

      - name: Deploy docs
        uses: julia-actions/julia-docdeploy@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}

      - name: Run doctests
        shell: julia --project=docs --color=yes {0}
        run: |
          using Documenter: DocMeta, doctest
          using Neat
          DocMeta.setdocmeta!(Neat, :DocTestSetup, :(using Neat); recursive=true)
          doctest(Neat)
